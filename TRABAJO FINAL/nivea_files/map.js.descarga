'use strict';Vue.component('awe-map',{props:{locale:String,userLocation:{type:Object,default:()=>{}},stores:Array,countries:Array,userMarkerColor:{type:String,default:'#f39027'},routeColor:{type:String,default:'#2d334e'},startVisible:{type:Boolean,default:!1},noPopup:{type:Boolean,default:!1},fitToStores:{type:Number,default:0},fitToArea:{type:Number,default:0},styleUri:{type:String,default:'mapbox://styles/mapbox/streets-v10'},clusters:{type:Boolean,default:!1},clusterColor:{type:String,default:'#51bbd6'},clusterRadius:{type:Number,default:20},clusterTextColor:{type:String,default:'#000000'},clusterExclusionTags:{type:Array,default:()=>[]},allowFullSize:{type:Boolean,default:!1},noClose:{type:Boolean,default:!1},reduceOnSelect:{type:Boolean,default:!1},error:{type:String,default:''},showExpanded:{type:Boolean,default:null},search:{type:String,default:'on',validator:e=>['on','off','expanded'].includes(e)},defaultViewSelectedOnly:{type:Boolean,default:!1},expandedViewSelectedOnly:{type:Boolean,default:!1},selectedRetailerOnly:{type:Boolean,default:!1},allowOos:{type:Number,default:0},routeMode:{type:String,default:'driving',validator:e=>['driving','walking','cycling'].includes(e)}},data:function(){return{id:null,_map:null,_userMarker:null,storeMarkers:{},_popup:null,_popupContentNode:null,selected:null,i18n:this.$root.i18n,mapMoved:!1,expanded:!1,unclusteredStoreIds:[],_storeUpdateTimeout:-1,_missedStoresUpdate:!1,_mapboxLoaded:!1,_mapboxPromise:null,_mapCreated:!1,_mapCreationPromise:null,_singleStoresDebouncer:-1,mapPadding:null,defaultStore:{isDefault:!0,product:{},retailer:{},store:{location:{}},price:{}},internalError:'',MAPBOX_SCRIPT:'https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js',MAPBOX_STYLE:'https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css'}},computed:{lang:function(){return this.locale.substring(0,2)},userPos:function(){return[this.userLocation.longitude,this.userLocation.latitude]},expandMap:function(){return app.isMedia&&0!=this.showExpanded||this.showExpanded},showSearch:function(){if(!this.mapMoved||'off'===this.search)return!1;let e;switch(this.search){case'on':e=!0;break;case'expanded':e=this.expanded}return e},containerStatusClasses:function(){return{expanded:this.expanded,'default-view-selected-only':this.defaultViewSelectedOnly,'expanded-view-selected-only':this.expandedViewSelectedOnly,'selected-retailer-only':this.selectedRetailerOnly}}},watch:{userLocation:function(e,t){e.longitude===t.longitude&&e.latitude===t.latitude||(this._userMarker&&this._userMarker.setLngLat([e.longitude,e.latitude]),this.mapMoved=!1)},stores:function(e,t){-1!=this._storeUpdateTimeout&&clearTimeout(this._storeUpdateTimeout),this._storeUpdateTimeout=setTimeout((()=>{this._storeUpdateTimeout=-1,this.clusters?this.setClusters():this.setStoreMarkers(),this.clearRoute()}),300)},selected:function(e,t){if(this.selectedRetailerOnly&&e.retailer.id&&e.retailer.id!==t.retailer.id){const t=`map-${this.id}`,s=window[t],o=document.createElement('style');o.id=t,o.innerText=`\n          .selected-retailer-only .store-marker:not(.r-${e.retailer.id}){\n            display: none !important;\n          }\n        `,this.$el&&(s?this.$el.replaceChild(o,s):this.$el.appendChild(o))}this.clusters&&this.setClusters(!1)}},created:function(){this.selected=this.defaultStore,this.id='_'+Math.random().toString(36).substring(2)},mounted:function(){this._popupContentNode=this.$el.removeChild(this.$el.querySelector('.map-popup-slot'))},methods:{__load:function(){return null==this.$data._mapboxPromise&&(this.$data._mapboxPromise=new Promise(((e,t)=>{let s=document.createElement('script');s.src=this.MAPBOX_SCRIPT,s.onload=()=>(performance.measure('mapbox-load-time','mapbox-load-start'),this.$data._mapboxLoaded=!0,console.debug(`Mapbox loaded in ${Utils.getPerf('mapbox-load-time')}ms`),e()),s.onerror=t,performance.mark('mapbox-load-start'),document.head.appendChild(s),s=document.createElement('link'),s.href=this.MAPBOX_STYLE,s.setAttribute('rel','stylesheet'),document.head.appendChild(s)}))),this.$data._mapboxPromise},show:async function(e,t=!1,s=!1){if(!this.$data._mapboxLoaded)try{await this.__load()}catch(e){throw console.error(e),new Error('Cannot load Mapbox')}if(this._mapCreated)this.expandMap||this._map.resize();else try{await this.__init()}catch(e){throw new Error('Error instanciating map object')}if(this.expandMap&&this.toggleExpand(),e){if(e.nearestStore){e.store=e.nearestStore,e.nearestStore=null;const t=this.stores.find((t=>t.store.id===e.store.id));t&&(e.lockdown=t.lockdown)}const o=this.selected.retailer.id!==e.retailer.id||this.selected.store.id!==e.store.id;this.selected=e,t?this.getDirections(null,!!s):(o&&this.clearRoute(),e.store&&e.store.location&&this._map.flyTo({center:[e.store.location.longitude,e.store.location.latitude]}),this.noPopup||this._showPopup())}this._missedStoresUpdate?this.clusters?this.setClusters():this.setStoreMarkers():(this.selected&&this.clusters&&this.defaultViewSelectedOnly&&!this.expanded||this.expandedViewSelectedOnly&&this.expanded)&&this.setClusters(),setTimeout(this._styleSelectedMarker,50)},_styleSelectedMarker:function(e){if(!this.selected)return;if(!e&&!(e=this.$el.querySelector(`.store-marker[data-sid='${this.selected.store.id}']:not(.selected)`)))return;const t=this.$el.querySelector('.store-marker.selected');t&&t.classList.remove('selected'),e.dataset.alternateImg&&(t&&(t.style.background=t.dataset.background,delete t.dataset.background),e.dataset.background=e.style.background,e.style.background=`url(${e.dataset.alternateImg})`),e.classList.add('selected')},_getMarkerNode:function(e){var t=`.store-markers .map-store-marker-content[data-sid='${e}']`,s=this.$el.querySelector(t);return s?Promise.resolve(s.cloneNode(!0)):new Promise((o=>{var i=0,r=setInterval((()=>(s=this.$el.querySelector(t))?(clearInterval(r),o(s.cloneNode(!0))):10==++i?(console.log(`Timeout: node ${e} not found`),clearInterval(r),o(null)):void 0),100)}))},createMarker:async function(e){var t=await this._getMarkerNode(e.store.id);if(t){t.classList.add('marker'),t.classList.add('store-marker'),t.dataset.sid=e.store.id,this.selectedRetailerOnly&&t.classList.add('r-'+e.retailer.id),t.addEventListener('click',this.markerClickHandler),t.addEventListener('keypress',this.markerClickHandler);var s=new mapboxgl.Marker({element:t,anchor:t.getAttribute('anchor')||'bottom'});s.setLngLat([e.store.location.longitude,e.store.location.latitude]),s.addTo(this._map),this.storeMarkers[e.store.id]=s}},markerClickHandler:function(e){if(e.stopPropagation(),'keypress'===e.type&'Enter'!==e.key)return;e.currentTarget.focus();const t=e.currentTarget.dataset.sid,s=this.stores.find((e=>e.store.id===t));if(!t||!s)return console.debug(`Store ${t} could not be found.`);this.selected=s,this._styleSelectedMarker(e.currentTarget),this.noPopup||this._showPopup(),this.reduceOnSelect&&this.expanded&&this.toggleExpand(),this.$emit('availability-select',{avail:this.selected}),Tracker.dropTag('clkloc',{avail:this.selected,area:Area.MAP}),this.$root.trigger('availability-select',{avail:this.selected,area:Area.MAP})},setStoreMarkers:function(e,t=!0){if(!this.stores)return;if(!this._mapCreated)return void(this._missedStoresUpdate=!0);let s;this._missedStoresUpdate=!1,s=e?this.stores.filter((t=>e.indexOf(t.store.id)>-1)):this.stores;Object.keys(this.storeMarkers).filter((e=>null==s.find((t=>t.store.id===e)))).forEach((e=>{this.storeMarkers[e].remove(),delete this.storeMarkers[e]})),s.forEach((e=>{this.storeMarkers[e.store.id]||this.createMarker(e)})),t&&this._fitMap()},_fitMap:function(e=0){if(0!==this.stores.length)if(this.fitToArea&&this.userLocation.boundingBox&&(Utils.countStoresInArea(this.userLocation.boundingBox,this.stores)>=this.fitToArea||'country'===this.userLocation.type))this._map.fitBounds(this.userLocation.boundingBox,{padding:10});else{let t;if(this.fitToStores||e){const s=e||this.fitToStores;t=this.stores.map((e=>e)).sort(((e,t)=>e.store.distance-t.store.distance)).slice(0,s),this.selected.isDefault||t.push(this.selected)}else t=this.stores;const s=new mapboxgl.LngLatBounds;for(let e=0;e<t.length;e++){let o=t[e].store.location;0==o.latitude&&0==o.longitude||s.extend([o.longitude,o.latitude])}this.userPos&&s.extend(this.userPos),null==this.mapPadding&&this._computePadding(),this._map.fitBounds(s,{padding:this.mapPadding})}else this.userLocation.boundingBox?this._map.fitBounds(this.userLocation.boundingBox):this._map.flyTo({center:this.userPos,zoom:9})},_showPopup:function(){let e=!1;this._popup?this._popup.remove():(this._popup=new mapboxgl.Popup({closeOnClick:!1,maxWidth:'none',offset:{bottom:[0,-35],right:[-10,0],left:[10,0],'bottom-right':[0,-35],'bottom-left':[0,-35]}}),e=!0),this._popup.setDOMContent(this._popupContentNode).setLngLat([this.selected.store.location.longitude,this.selected.store.location.latitude]).addTo(this._map);const t=this.$el.getElementsByClassName('mapboxgl-popup-content')[0];t&&t.addEventListener('click',(e=>{e.stopPropagation()})),e&&this.$root.trigger('popup-init'),this.$root.trigger('popup-show')},__init:function(){return null==this.$data._mapCreationPromise&&(this.$data._mapCreationPromise=new Promise(((e,t)=>{mapboxgl.accessToken='pk.eyJ1Ijoic3dhdmVuIiwiYSI6ImNqbTd1dXBlcjFhejMzcHBvajVlYjFjMXcifQ.ljVSrON2CjvnSj38Nxa9RA',this._map=new mapboxgl.Map({container:this.$el.getElementsByClassName('_map-ctnr')[0],style:this.styleUri,center:this.userPos,zoom:10}),this._map.on('load',(()=>{this._mapLoadCallback(),e()}))}))),this.$data._mapCreationPromise},_mapLoadCallback:function(){this._map.getStyle().layers.forEach((e=>{e.layout?.['text-field']&&'road_label'!=e['source-layer']&&this._map.setLayoutProperty(e.id,'text-field',['get','name_'+this.lang])})),this._map.addControl(new mapboxgl.NavigationControl({showCompass:!1}),'bottom-right'),this.clusters&&this._initClusters(),this._mapCreated=!0,this.$root.trigger('map-init'),this._createUserMarker(),this._map.on('dragend',(()=>{const e=this._map.getCenter();Utils.getHaversineDistance(this.userPos,e)>MIN_DISTANCE&&(this.mapMoved=!0)}))},_createUserMarker(){var e=document.getElementById('user-marker'),t={};if(e){t.element=e;let s=e.getAttribute('anchor');s&&(t.anchor=s),e.getAttribute('display')&&e.setAttribute('display','block')}else t.color=this.userMarkerColor;this._userMarker=new mapboxgl.Marker(t),this._userMarker.setLngLat(this.userPos),this._userMarker.addTo(this._map)},clearRoute:function(){this._map&&this._map.getLayer('route')&&(this._map.removeLayer('route'),this._map.removeSource('route'))},getDirections:async function(e,t=!1){e&&e.stopPropagation&&e.stopPropagation();try{let e;const t=Utils.getHaversineDistance(this.userPos,this.selected.store.location);let s=this.routeMode,o=!1;do{const i=await fetch(`https://api.mapbox.com/directions/v5/mapbox/${s}/${this.userPos[0]},${this.userPos[1]};${this.selected.store.location.longitude},${this.selected.store.location.latitude}?geometries=geojson&access_token=pk.eyJ1Ijoic3dhdmVuIiwiYSI6ImNqbTd1dXBlcjFhejMzcHBvajVlYjFjMXcifQ.ljVSrON2CjvnSj38Nxa9RA`);e=(await i.json()).routes[0],(s=e.distance>10*t)?(console.debug('route too long, try walking.'),s='walking',o=!0):o=!1}while(o);const i=e.geometry;this.clearRoute(),this._map.addLayer({id:'route',type:'line',source:{type:'geojson',data:{type:'Feature',geometry:i}},paint:{'line-width':3,'line-color':this.routeColor}});let r=i.coordinates.reduce(((e,t)=>e.extend(t)),new mapboxgl.LngLatBounds(i.coordinates[0],i.coordinates[0]));this._map.fitBounds(r,{padding:this.mapPadding}),this._popup&&this._popup.remove()}catch(e){console.error(e)}Tracker.dropTag('clkRoute',{avail:this.selected,area:Area.MAP,auto:!!t}),this.$root.trigger('route-show',{avail:this.selected})},close:function(e){e.stopPropagation(),this.$emit('map-close'),this.expanded&&this.toggleExpand()},_initClusters:function(){this._map.addSource('stores',{type:'geojson',data:{type:'FeatureCollection',features:[]},cluster:!0,clusterMaxZoom:13,clusterRadius:50}),this._map.addLayer({id:'clusters',source:'stores',type:'circle',filter:['has','point_count'],paint:{'circle-color':this.clusterColor,'circle-radius':this.clusterRadius}}),this._map.addLayer({id:'cluster-count',type:'symbol',source:'stores',filter:['has','point_count'],layout:{'text-field':'{point_count_abbreviated}','text-font':['Arial Unicode MS Bold'],'text-size':12},paint:{'text-color':this.clusterTextColor}}),this._map.on('click','clusters',(e=>{var t=this._map.queryRenderedFeatures(e.point,{layers:['clusters']}),s=t[0].properties.cluster_id;this._map.getSource('stores').getClusterExpansionZoom(s,((e,s)=>{e||this._map.easeTo({center:t[0].geometry.coordinates,zoom:s})}))})),this._map.on('zoomend',(()=>{this.showUnclustered()})),this._map.on('dragend',(()=>{this.showUnclustered()})),this._map.on('sourcedata',(e=>{'stores'===e.sourceId&&this.showUnclustered()}))},showUnclustered:function(){-1!==this._singleStoresDebouncer&&clearTimeout(this._singleStoresDebouncer),this._singleStoresDebouncer=setTimeout((()=>{this._singleStoresDebouncer=-1;const e=this._map.querySourceFeatures('stores',{filter:['!has','point_count']}).map((e=>e.properties.sid)).concat(this.unclusteredStoreIds).reduce(((e,t)=>(-1===e.indexOf(t)&&e.push(t),e)),[]);this.setStoreMarkers(e,!1),setTimeout(this._styleSelectedMarker,50)}),100)},_sortStoresForClustering:function(){const e=[];return this.stores.forEach((t=>{if(this.selectedRetailerOnly&&this.selected.retailer.id&&this.selected.retailer.id!==t.retailer.id)return;if(!t.store.tags||0===t.store.tags.length)return void e.push(t);let s=!1,o=0;for(;!s&&o<t.store.tags.length;)this.clusterExclusionTags.indexOf(t.store.tags[o++])>-1&&(s=!0);s?this.unclusteredStoreIds.push(t.store.id):e.push(t)})),e},setClusters:function(e=!0){if(!this._mapCreated)return void(this._missedStoresUpdate=!0);this._missedStoresUpdate=!1;const t=this._map.getSource('stores');if(!this._mapCreated||!t)return void(this._missedStoresUpdate=!0);let s;this._missedStoresUpdate=!1,this.unclusteredStoreIds=[],s=this.clusterExclusionTags.length>0||this.selectedRetailerOnly?this._sortStoresForClustering():this.defaultViewSelectedOnly&&!this.expanded||this.expandedViewSelectedOnly&&this.expanded?[this.selected]:this.stores,this.selected.isDefault||(s=s.filter((e=>e.store.id!==this.selected.store.id)),this.unclusteredStoreIds.push(this.selected.store.id)),t.setData({type:'FeatureCollection',features:s.map((e=>({type:'Feature',properties:{name:e.store.name,rid:e.retailer.id,lat:e.store.location.latitude,lng:e.store.location.longitude,sid:e.store.id},geometry:{type:'Point',coordinates:[e.store.location.longitude,e.store.location.latitude]}})))}),e&&this._fitMap()},updateLocation:async function(e){e.stopPropagation(),this.mapMoved=!1;const t=this._map.getCenter(),s=await Utils.getReverseGeocoding(t.lng,t.lat,[],this.lang,'manual',!1);s?this.countries.includes(s.country)||(this.allowOos&OosLevels.ALLOW)===OosLevels.ALLOW?(this.$emit('location-update',s),this.internalError=''):this.internalError=ErrorCodes.UNAVAILABLE_COUNTRY_ERROR:console.error('Could not get address from '+JSON.stringify(t))},toggleExpand:function(){this.expanded=!this.expanded,hostCom.send('awe:toggleFullScreen',{hideHostScroll:this.$root.hideHostScroll&&this.$root.isPopin},(()=>{if(this.expanded){let e=this.$root.$el.style.height;this.$root.$el.style.height='100vh',e&&(this.$root.$el.dataset.height=e),e=this.$root.$el.style.width,this.$root.$el.style.width='100vw',e&&(this.$root.$el.dataset.width=e),this.$el.style.position='fixed',this.$el.style.top=0,this.$el.style.left=0,this.$el.style.width='100%',this.$el.style.height='100%',this.$el.style['z-index']=50,this.$el.addEventListener('keyup',(e=>{'Escape'===e.key&&(e.stopPropagation(),this.toggleExpand())}),{passive:!0,once:!0})}else{let e=this.$root.$el.dataset.height||'';this.$root.$el.style.height=e,e=this.$root.$el.dataset.width||'',this.$root.$el.style.width=e,this.$el.style.position='',this.$el.style.top='',this.$el.style.left='',this.$el.style.width='',this.$el.style.height='',this.$el.style['z-index']=''}this.defaultViewSelectedOnly!==this.expandedViewSelectedOnly&&(this.clusters?this.setClusters():this.setStoreMarkers()),setTimeout((()=>{this._map.resize(),this._fitMap()}),50)}))},resize:function(){this._mapCreated&&this._map.resize()},_computePadding:function(){let e=[];try{for(let t=0;t<document.styleSheets.length;t++){let s=document.styleSheets[t];if(!s.href||s.href.startsWith(window.origin))for(let t=0;t<s.cssRules.length;t++){let o=s.cssRules[t];o.type===CSSRule.STYLE_RULE&&-1!=o.selectorText.indexOf('.map-store-marker-content')&&e.push(o)}}}catch(e){Tracker.log('error',{msg:e.message,stack:e.stack}),console.error(e.message)}let t=0,s=0;if(e.forEach((e=>{let o=e.style.width,i=e.style.height;o.endsWith('px')&&(t=Math.max(t,parseInt(o,10))),i.endsWith('px')&&(s=Math.max(s,parseInt(i,10)))})),s&&t){let e=Math.floor(t/2)+10;this.mapPadding={top:s+10,right:e,bottom:10,left:e}}else this.mapPadding=50},clearSelection:function(){this.selected=this.defaultStore},buy:app.buy},template:'\n    <div style="overflow:hidden;" :class="containerStatusClasses">\n      <div class="_map-ctnr"></div>\n\n      <slot name="popup" v-bind:selected="selected">\n        <div class=\'map-popup-slot\' role="dialog">\n          <div class="map-block-1" role="presentation">\n            <img :src="selected.retailer.logo" :alt="selected.retailer.name">\n            <span>{{ selected.store.name }}</span>\n          </div>\n          {{ selected.store.location.address }}\n          <div class="map-btns" role="presentation">\n            <a v-if="selected.clkUrl" v-on:click="buy(selected, $event)" :href="selected.clkUrl" target="_blank" class="map-btn">{{i18n.getString(\'BUY\')}}</a>\n            <span v-on:click="getDirections" v-on:keypress.enter="getDirections" class="map-btn" role="button">{{i18n.getString(\'SHOWROUTE\')}}</span>\n          </div>\n        </div>\n      </slot>\n\n      <div class="store-markers">\n        <slot name="store-marker" v-for="store in stores" v-bind:store="store">\n          <div class="map-store-marker-content" :data-sid="store.store.id" :style="{background:\'url(//content.static-swaven.com/img/picto_map/\' + store.retailer.logoId + \'.png)\'}">\n          </div>\n        </slot>\n      </div>\n\n      <slot name="user-marker"></slot>\n\n      <div class="map-controls">\n        <div v-if="!noClose" class="control map-close icon-cancel-1" v-on:click="close" v-on:keypress.enter="close"\n          role="button" :aria-label="i18n.getString(\'MAP_CLOSE_LBL\')"></div>\n        <div v-if="allowFullSize" class="control map-expand" :class="expanded ? \'icon-resize-small\' : \'icon-resize-full\'"\n          v-on:click="toggleExpand" v-on:keypress.enter="toggleExpand"\n          role="button" :aria-label="i18n.getString(expanded ? \'MAP_REDUCE_LBL\' : \'MAP_EXPAND_LBL\')"></div>\n      </div>\n\n      <transition name="fade">\n        <div id="map-messages" v-show="mapMoved || error || internalError">\n          <div v-if="error || internalError" class="map-error">\n            {{i18n.getString(error || internalError)}}\n          </div>\n          <div v-show="showSearch" v-on:click="updateLocation" v-on:keypress.enter="updateLocation" class="map-moved-btn">{{i18n.getString(\'UPDATE_LOCATION\')}}</div>\n        </div>\n      </transition>\n    </div>\n  '});
//# sourceMappingURL=map.js.map
