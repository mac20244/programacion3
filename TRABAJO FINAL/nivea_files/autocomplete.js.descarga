'use strict';Vue.component('awe-autocomplete',{props:{countries:{type:Array},locale:{type:String},limit:{type:Number,default:5},allowOos:{type:Number,default:0}},data:function(){return{geocodeTimeoutId:0,places:[],selectedIdx:-1,attached:!1,waitForPlaces:!1,query:''}},computed:{hidden:function(){return 0===this.places.length}},watch:{places:function(e){this.waitForPlaces&e.length>0&&this.selectPlace(e[0]),this.waitForPlaces=!1}},methods:{request:function(e){this.geocodeTimeoutId&&(clearTimeout(this.geocodeTimeoutId),this.geocodeTimeoutId=0),this.setup(),this.query=e,this.geocodeTimeoutId=setTimeout((async()=>{if(clearTimeout(this.geocodeTimeoutId),this.geocodeTimeoutId=0,!e)return;const t=await this._sendRequest(e);this.places=t.features.map((e=>Utils.parseFeature(e,'manual',!1))),this.selectedIdx=-1}),300)},setup:function(){if(this.attached)return;const e=this.$el.previousSibling.getBoundingClientRect(),t=this.getContainingBlock(this.$el.parentElement);let i=e.bottom,s=e.left;if(t){let e=t.getBoundingClientRect();i-=e.top,s-=e.left}this.$el.style.top=`${i}px`,this.$el.style.left=`${s}px`,this.$el.style.width=`${e.width}px`,this.$el.previousSibling.addEventListener('keydown',this._onkeydown),this.$el.previousSibling.addEventListener('blur',this.hide),this.attached=!0},getContainingBlock:function(e){let t=null;do{'static'!=window.getComputedStyle(e).position?t=e:e=e.parentElement}while(null!=e&&null===t);return t},hide:function(e){this.$el.previousSibling.value=this.query,this.clean()},clean:function(){this.places=[],this.$el.previousSibling.removeEventListener('keydown',this._onkeydown),this.$el.previousSibling.removeEventListener('blur',this.hide),this.attached=!1},_onkeydown:function(e){switch(e.key){case'ArrowUp':this.selectedIdx>0&&(this.selectedIdx--,e.currentTarget.value=this.places[this.selectedIdx].address);break;case'ArrowDown':this.selectedIdx<this.places.length-1&&(this.selectedIdx++,e.currentTarget.value=this.places[this.selectedIdx].address);break;case'Escape':this.hide();break;case'Enter':-1===this.selectedIdx&&(this.selectedIdx=0);let t=this.places[this.selectedIdx];if(!t)return void(this.waitForPlaces=!0);this.selectPlace(t)}e.stopPropagation()},selectPlace:async function(e){if(!e.zipCode){const t=await Utils.getReverseGeocoding(e.longitude,e.latitude,this.countries,this.locale,'manual',!1);e.zipCode=t.zipCode}this.$emit('location-update',e),this.clean()},_sendRequest:async function(e){try{let t=`language=${this.locale}&limit=${this.limit}&access_token=pk.eyJ1Ijoic3dhdmVuIiwiYSI6ImNqbTd1dXBlcjFhejMzcHBvajVlYjFjMXcifQ.ljVSrON2CjvnSj38Nxa9RA`;(this.allowOos&OosLevels.ALLOW)!==OosLevels.ALLOW&&(t+='&country='+this.countries.join(','));return(await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${e}.json?${t}`)).json()}catch(e){return console.error(e),{features:[]}}},_onmouseover:function(e,t){this.selectedIdx=e,this.$el.previousSibling.value=t.currentTarget.innerText},_onmousedown:function(e){var t=this.places[e];this.selectPlace(t)}},template:'\n    <ol id="_autocomplete" :class="{ hidden: hidden }" role="listbox">\n      <li v-for="(p, _i) in places" :title="p.address" role="option"\n        :class="{selected: _i === selectedIdx, \'ac-row\': 1}"\n        v-on:mouseover="_onmouseover(_i, $event)" v-on:mousedown="_onmousedown(_i)">\n      {{ p.address }}\n      </li>\n    </ol>'});
//# sourceMappingURL=autocomplete.js.map
